# Summary:
# Run Unit and coverage tests, then upload it to Code Climate dashboard
#
# See https://github.com/actions/checkout https://github.com/actions/checkout/releases/tag/v1
# See https://github.com/paambaati/codeclimate-action https://github.com/paambaati/codeclimate-action/tree/v2.7.5

name: Update Code Climate test coverage

on:
  push:
    branches:
      - 'main' # Change this branch name by your CodeClimate "main" branch use

jobs:
  # Configures the deployment environment, install dependencies (like node, npm, etc.) that are requirements for the upcoming jobs
  # Ex: Necessary to run `yarn test:coverage`
  setup-environment:
    name: Setup deployment environment (Ubuntu 18.04 - Node 12.x)
    runs-on: ubuntu-18.04
    steps:
      - name: Installing node.js
        uses: actions/setup-node@v2.1.4 # Used to install node environment - XXX https://github.com/actions/setup-node
        with:
          node-version: '12.x' # Use the same node.js version as the one Vercel's uses (currently node12.x)
  run-tests-coverage:
    name: Run tests coverage and send report to Code Climate
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Installing dependencies
        run: yarn install
      - uses: paambaati/codeclimate-action@v3.2.0
        env:
          # XXX Necessary for running tests properly (required). Do not generate the token from a Vercel account with actual production usage. (use a dummy account)
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # XXX Define this secret in "Github repo > Settings > Secrets", you can get it from Vercel at https://vercel.com/account/tokens
          VERCEL_DOMAIN: ${{ secrets.VERCEL_DOMAIN }} # XXX Define this secret in "Github repo > Settings > Secrets", it should use a domain the VERCEL_TOKEN you provided has access to
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }} # XXX Define this secret in "Github repo > Settings > Secrets", you can get it from Code Climate in "Repo settings > Test coverage".
        with:
          coverageCommand: yarn test:coverage
